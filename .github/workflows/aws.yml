name: Deploy to AWS ECS

on:
  push:
    branches:
      - main  # Run this workflow on every push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: locationApp

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug GitHub Secrets
        run: echo "AWS_ACCESS_KEY_ID is set" && [ -n "${{ secrets.AWS_ACCESS_KEY_ID }}" ] && echo "AWS_ACCESS_KEY_ID is set" && [ -n "${{ secrets.AWS_ACCESS_KEY_ID }}" ]

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2  # Change this to your region

      - name: Log in to public Amazon ECR
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/j0h9z3j3

      - name: Build and tag Docker image
        env:
          REPO_URI: public.ecr.aws/j0h9z3j3/huynq/location-service
        run: |
          docker build  -t $REPO_URI:latest .
          docker tag $REPO_URI:latest $REPO_URI:${{ github.sha }}

      - name: Push to Amazon ECR
        env:
          REPO_URI: public.ecr.aws/j0h9z3j3/huynq/location-service
        run: |
          docker push $REPO_URI:latest
          docker push $REPO_URI:${{ github.sha }}

      - name: Deploy to Amazon ECS
        env:
          AWS_REGION: ap-southeast-2
          CLUSTER: dream
          SERVICE: location-service-service-ujug2gnu
          IMAGE_URI: public.ecr.aws/j0h9z3j3/huynq/location-service:${{ github.sha }}
        run: |
          aws ecs update-service --cluster $CLUSTER --service $SERVICE --force-new-deployment --region $AWS_REGION
